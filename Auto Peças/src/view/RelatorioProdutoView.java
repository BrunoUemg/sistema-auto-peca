/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.ProdutoDAO;
import DAO.Session;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Font;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import com.lowagie.text.Element;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Produto;

/**
 *
 * @author serpa
 */
public class RelatorioProdutoView extends javax.swing.JInternalFrame {

    Produto produto;
    ProdutoDAO produtoDAO;
    Document doc;

    /**
     * Creates new form ClienteView
     */
    public RelatorioProdutoView() {
        produtoDAO = new ProdutoDAO();
        initComponents();
        this.setVisible(true);
        Session session = Session.getInstance();
        try {
            readVendas();
        } catch (SQLException ex) {
            Logger.getLogger(RelatorioProdutoView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void readVendas() throws SQLException {
        DefaultTableModel modelF = (DefaultTableModel) tbProdutos.getModel();
        modelF.setNumRows(0);
        for (Produto p : produtoDAO.readProduto()) {
            modelF.addRow(new Object[]{
                p.getIdProduto(),
                p.getNome(),
                p.getQuantidadeMin(),
                p.getQuantidadeEstoque(),
                p.getValorCompra(),
                p.getValorSaida()
            });

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tbProdutos = new javax.swing.JTable();
        btnRelatorioProdutos = new javax.swing.JButton();
        btnRelatorioBaixo = new javax.swing.JButton();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setTitle("Cadastro de Clientes");
        setVisible(true);

        tbProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Quantidade Minima", "Estoque", "Valor de Compra", "Valor de Saida"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProdutosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbProdutos);
        if (tbProdutos.getColumnModel().getColumnCount() > 0) {
            tbProdutos.getColumnModel().getColumn(0).setResizable(false);
            tbProdutos.getColumnModel().getColumn(1).setResizable(false);
            tbProdutos.getColumnModel().getColumn(2).setResizable(false);
            tbProdutos.getColumnModel().getColumn(3).setResizable(false);
            tbProdutos.getColumnModel().getColumn(4).setResizable(false);
            tbProdutos.getColumnModel().getColumn(5).setResizable(false);
        }

        btnRelatorioProdutos.setText("Relatório de Produtos");
        btnRelatorioProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioProdutosActionPerformed(evt);
            }
        });

        btnRelatorioBaixo.setText("Produtos em Baixa");
        btnRelatorioBaixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioBaixoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1052, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRelatorioProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRelatorioBaixo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnRelatorioProdutos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRelatorioBaixo)
                .addGap(86, 86, 86)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProdutosMouseClicked
    }//GEN-LAST:event_tbProdutosMouseClicked

    private void btnRelatorioProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioProdutosActionPerformed
        String nomeDiretorio = null;
        String nomePasta = "SRS";
        String separador = java.io.File.separator;
        try {
            nomeDiretorio = "C:" + separador + nomePasta;
            if (!new File(nomeDiretorio).exists()) {
                (new File(nomeDiretorio)).mkdir();
            }
            gerarRelatorioProdutos();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRelatorioProdutosActionPerformed

    private void btnRelatorioBaixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioBaixoActionPerformed
        String nomeDiretorio = null;
        String nomePasta = "SRS";
        String separador = java.io.File.separator;
        try {
            nomeDiretorio = "C:" + separador + nomePasta;
            if (!new File(nomeDiretorio).exists()) {
                (new File(nomeDiretorio)).mkdir();
            }
            gerarRelatorioProdutosBaixa();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRelatorioBaixoActionPerformed

    public void gerarRelatorioProdutos() {
        try {
            List<Produto> lista = new ArrayList<>();
            lista = produtoDAO.readProduto();
            doc = new Document(PageSize.A4, 41.5f, 41.5f, 55.2f, 55.2f);
            PdfWriter.getInstance(doc, new FileOutputStream("C:/SRS/Produtos" + ".pdf"));
            doc.open();

            Font f1 = new Font(Font.HELVETICA, 14, Font.BOLD);
            Font f2 = new Font(Font.HELVETICA, 12, Font.BOLD);
            Font f3 = new Font(Font.HELVETICA, 12, Font.NORMAL);
            Font f4 = new Font(Font.HELVETICA, 10, Font.BOLD);
            Font f5 = new Font(Font.HELVETICA, 10, Font.NORMAL);

            Paragraph titulo1 = new Paragraph("Produtos Auto Peças", f2);
            titulo1.setAlignment(Element.ALIGN_CENTER);
            titulo1.setSpacingAfter(10);

            Paragraph titulo2 = new Paragraph("Relátorio de Produtos", f1);
            titulo2.setAlignment(Element.ALIGN_CENTER);
            titulo2.setSpacingAfter(10);
            PdfPTable tabela = new PdfPTable(new float[]{0.60f, 0.40f, 0.40f, 0.40f});
            tabela.setHorizontalAlignment(Element.ALIGN_CENTER);
            tabela.setWidthPercentage(100f);

            PdfPCell cabecalho1 = new PdfPCell(new Paragraph("Produto", f3));
            cabecalho1.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho1.setBorder(0);

            PdfPCell cabecalho2 = new PdfPCell(new Paragraph("Quantidade", f3));
            cabecalho2.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho2.setBorder(0);

            PdfPCell cabecalho3 = new PdfPCell(new Paragraph("Valor de Compra", f3));
            cabecalho3.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho3.setBorder(0);

            PdfPCell cabecalho4 = new PdfPCell(new Paragraph("Valor de Saida ", f3));
            cabecalho4.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho4.setBorder(0);

            tabela.addCell(cabecalho1);
            tabela.addCell(cabecalho2);
            tabela.addCell(cabecalho3);
            tabela.addCell(cabecalho4);

            for (Produto produto : lista) {
                Paragraph p1 = new Paragraph(produto.getNome(), f5);
                p1.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col1 = new PdfPCell(p1);
                col1.setBorder(PdfPCell.BOX);

                Paragraph p2 = new Paragraph(String.valueOf(produto.getQuantidadeEstoque()), f5);
                p2.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col2 = new PdfPCell(p2);
                col2.setBorder(PdfPCell.BOX);

                Paragraph p3 = new Paragraph(String.valueOf(produto.getValorCompra()), f5);
                p3.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col3 = new PdfPCell(p3);
                col3.setBorder(PdfPCell.BOX);

                Paragraph p4 = new Paragraph(String.valueOf(produto.getValorSaida()), f5);
                p4.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col4 = new PdfPCell(p4);
                col4.setBorder(PdfPCell.BOX);

                tabela.addCell(col1);
                tabela.addCell(col2);
                tabela.addCell(col3);
                tabela.addCell(col4);
            }
            doc.add(titulo1);
            doc.add(titulo2);
            doc.add(tabela);
            doc.close();
            JOptionPane.showMessageDialog(null, "Relatório salvo com sucesso");
            String caminho = "C:/SRS/Produtos.pdf";
            Desktop.getDesktop().open(new File(caminho));
        } catch (DocumentException e) {
            e.printStackTrace();
        } catch (HeadlessException ex) {
            ex.printStackTrace();
        } catch (IOException exx) {
            JOptionPane.showMessageDialog(null, "Documento de Requisitos aberto. Feche para gerar um novo.");
        } catch (SQLException exxx) {
            exxx.printStackTrace();
        }
    }

    public void gerarRelatorioProdutosBaixa() {
        try {
            List<Produto> lista = new ArrayList<>();
            lista = produtoDAO.readProdutoEstoque();
            doc = new Document(PageSize.A4, 41.5f, 41.5f, 55.2f, 55.2f);
            PdfWriter.getInstance(doc, new FileOutputStream("C:/SRS/ProdutosEmBaixa" + ".pdf"));
            doc.open();

            Font f1 = new Font(Font.HELVETICA, 14, Font.BOLD);
            Font f2 = new Font(Font.HELVETICA, 12, Font.BOLD);
            Font f3 = new Font(Font.HELVETICA, 12, Font.NORMAL);
            Font f4 = new Font(Font.HELVETICA, 10, Font.BOLD);
            Font f5 = new Font(Font.HELVETICA, 10, Font.NORMAL);

            Paragraph titulo1 = new Paragraph("Produtos Auto Peças", f2);
            titulo1.setAlignment(Element.ALIGN_CENTER);
            titulo1.setSpacingAfter(10);

            Paragraph titulo2 = new Paragraph("Relátorio de Produtos", f1);
            titulo2.setAlignment(Element.ALIGN_CENTER);
            titulo2.setSpacingAfter(10);
            PdfPTable tabela = new PdfPTable(new float[]{0.60f, 0.40f, 0.40f, 0.40f, 0.40f});
            tabela.setHorizontalAlignment(Element.ALIGN_CENTER);
            tabela.setWidthPercentage(100f);

            PdfPCell cabecalho1 = new PdfPCell(new Paragraph("Produto", f3));
            cabecalho1.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho1.setBorder(0);

            PdfPCell cabecalho2 = new PdfPCell(new Paragraph("Quantidade Minima", f3));
            cabecalho2.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho2.setBorder(0);

            PdfPCell cabecalho3 = new PdfPCell(new Paragraph("Quantidade", f3));
            cabecalho3.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho3.setBorder(0);

            PdfPCell cabecalho4 = new PdfPCell(new Paragraph("Valor de Compra ", f3));
            cabecalho4.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho4.setBorder(0);

            PdfPCell cabecalho5 = new PdfPCell(new Paragraph("Valor de Saida ", f3));
            cabecalho5.setHorizontalAlignment(Element.ALIGN_CENTER);
            cabecalho5.setBorder(0);

            tabela.addCell(cabecalho1);
            tabela.addCell(cabecalho2);
            tabela.addCell(cabecalho3);
            tabela.addCell(cabecalho4);
            tabela.addCell(cabecalho5);

            for (Produto produto : lista) {
                Paragraph p1 = new Paragraph(produto.getNome(), f5);
                p1.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col1 = new PdfPCell(p1);
                col1.setBorder(PdfPCell.BOX);

                Paragraph p2 = new Paragraph(String.valueOf(produto.getQuantidadeMin()), f5);
                p2.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col2 = new PdfPCell(p2);
                col2.setBorder(PdfPCell.BOX);

                Paragraph p3 = new Paragraph(String.valueOf(produto.getQuantidadeEstoque()), f5);
                p3.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col3 = new PdfPCell(p3);
                col3.setBorder(PdfPCell.BOX);

                Paragraph p4 = new Paragraph(String.valueOf(produto.getValorCompra()), f5);
                p4.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col4 = new PdfPCell(p4);
                col4.setBorder(PdfPCell.BOX);

                Paragraph p5 = new Paragraph(String.valueOf(produto.getValorSaida()), f5);
                p5.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col5 = new PdfPCell(p5);
                col5.setBorder(PdfPCell.BOX);

                tabela.addCell(col1);
                tabela.addCell(col2);
                tabela.addCell(col3);
                tabela.addCell(col4);
                tabela.addCell(col5);
            }
            doc.add(titulo1);
            doc.add(titulo2);
            doc.add(tabela);
            doc.close();
            JOptionPane.showMessageDialog(null, "Relatório salvo com sucesso");
            String caminho = "C:/SRS/ProdutosEmBaixa.pdf";
            Desktop.getDesktop().open(new File(caminho));
        } catch (DocumentException e) {
            e.printStackTrace();
        } catch (HeadlessException ex) {
            ex.printStackTrace();
        } catch (IOException exx) {
            JOptionPane.showMessageDialog(null, "Documento de Requisitos aberto. Feche para gerar um novo.");
        } catch (SQLException exxx) {
            exxx.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRelatorioBaixo;
    private javax.swing.JButton btnRelatorioProdutos;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbProdutos;
    // End of variables declaration//GEN-END:variables
}
